
    {#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : Stage  == #}
{# == Node Type Description    : This node loads data into stage table using config options distinct,multi-source == #}

{# Release date:20250217 Version:1.0.0 #}

{% for test in node.tests if config.testsEnabled %}
        {% if test.runOrder == 'Before' %}
            {{ test_stage(test.name, test.continueOnFailure) }}
            {{ test.templateString }}
        {% endif %}
{% endfor %}

{% if node.materializationType == 'table' %}
	{% if config.preSQL %}
		{{ stage('Pre-SQL') }}
		{{ config.preSQL }}
	{% endif %}
	
	{% if config.truncateBefore %}
		{{ stage('Truncate Stage Table') }}
		TRUNCATE TABLE {{ ref_no_link(node.location.name, node.name) }}
	{% endif %}

	{% set nsVariables = namespace(varInsertStrategy="INSERT") %}
	{% if node.isMultisource %}
	{% set nsVariables.varInsertStrategy = config.insertStrategy %}
	{% endif %}	
	

	{% if nsVariables.varInsertStrategy in ['UNION', 'UNION ALL'] %}
		{{ stage( nsVariables.varInsertStrategy + ' Sources' | string ) }}
		INSERT INTO {{ ref_no_link(node.location.name, node.name) }}
			(
				{% for col in columns %}
					[{{ col.name }}]
					{%- if not loop.last -%},{% endif %}
				{% endfor %}
			)
	{% endif %}
	{% for source in sources %}
		{%- if nsVariables.varInsertStrategy == 'INSERT' %}
		{{ stage('Insert ' + source.name | string ) }}
		INSERT INTO {{ ref_no_link(node.location.name, node.name) }}
			(
				{% for col in source.columns %}
					[{{ col.name }}]
					{%- if not loop.last -%},{% endif %}
				{% endfor %}
		    )
		{% endif %}
		SELECT 
		{% if config.selectDistinct -%}	 
		DISTINCT	
		{%- endif -%}
		{% for col in source.columns %}
            {{ get_source_transform(col) }} AS [{{ col.name }}]
			{%- if not loop.last -%}, {% endif %}
		{% endfor %}
        {{source.join}}
		{% if node.isMultisource and nsVariables.varInsertStrategy in ['UNION', 'UNION ALL'] and not loop.last %}
		{{nsVariables.varInsertStrategy}}
		{%- else -%}
		{%- set nsVariables.varInsertStrategy = 'INSERT' -%}
		{% endif %}
	{% endfor %}
	
	{% if config.postSQL %}
		{{ stage('Post-SQL') }}
		{{ config.postSQL }}
	{% endif %}

{% endif %}

{% if config.testsEnabled %}
	{% for test in node.tests %}
		{% if test.runOrder == 'After' %}
			{{ test_stage(test.name, test.continueOnFailure) }}
			{{ test.templateString }}
        {% endif %}
	{% endfor %}

	{% for column in columns %}
		{% for test in column.tests %}
			{{ test_stage(column.name + ": " + test.name) }}
			{{ test.templateString }}
		{% endfor %}
	{% endfor %}
{% endif %}